{"version":3,"sources":["components/DashboardError/DashboardError.js","components/LastUpdate/LastUpdate.js","components/Charts/DoughnutChart.js","components/CurrentValues/CurrentValues.js","components/ListInformationContainers.js/ListInformationContainers.js","helpers/createGroupByUnits.js","components/Dashboard/Dashboard.js","types/types.js","actions/ui.js","actions/api.js","components/Sidebar/Sidebar.js","App.js","reducers/rootReducer.js","reducers/apiReducer.js","reducers/uiReducer.js","store/store.js","index.js"],"names":["DashboardError","error","LastUpdate","useState","lastUpdate","setLastUpdate","useSelector","state","api","data","isTime","useEffect","intervalId","setInterval","currentMoment","Date","setMinutes","getMinutes","clearInterval","className","icon","faRedo","Chart","defaults","font","weight","size","color","DoughnutChart","groupUnitType","groupData","dataChart","labels","datasets","label","backgroundColor","borderColor","borderWidth","forEach","elem","Object","values","info","push","nombre","valor","style","width","toUpperCase","CurrentValues","indicator","minWidth","unidad_medida","faPercentage","faDollarSign","unitTypes","ListInformationContainers","groupsByUnit","setGroupsByUnit","units","separate","map","unit","entries","value","filter","percent","dollar","pesos","createGroupByUnits","libra_cobre","tasa_desempleo","imacec","euro","dolar","dolar_intercambio","uf","utm","bitcoin","Dashboard","types","setLoadingStateOfUI","loading","type","payload","isTimeToUpdateData","setDashboardInfo","Sidebar","faUser","faInfo","faTasks","faCoins","faNewspaper","App","dispatch","useDispatch","url","a","fetch","res","json","getAllData","ui","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cd571b5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const DashboardError = ({error}) => {\r\n  return (\r\n    <div>\r\n      <h1>Error in dashboard:</h1>\r\n      <p>{error}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRedo } from '@fortawesome/free-solid-svg-icons';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const LastUpdate = () => {\r\n  const [lastUpdate, setLastUpdate] = useState(0)\r\n  const { data, isTime } = useSelector(state => state.api);\r\n\r\n  useEffect(() => {\r\n    if(data){\r\n      const intervalId = setInterval( () => {\r\n        let currentMoment = new Date();\r\n        currentMoment.setMinutes(currentMoment.getMinutes() + 1)\r\n        setLastUpdate(currentMoment.getMinutes())\r\n      }, 60000)\r\n      return () => {\r\n        clearInterval(intervalId);\r\n        setLastUpdate(0)\r\n      }\r\n    }\r\n  }, [data, setLastUpdate, isTime])\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"text-white-50 ml-5 text-center\">\r\n        <FontAwesomeIcon icon={faRedo}/>\r\n        {' Última actualización hace'}  \r\n        {\r\n          (lastUpdate === 1) ? ' ' + (lastUpdate) + ' minuto' : ' ' + (lastUpdate) + ' minutos'\r\n        }\r\n      </p> \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Chart, Doughnut } from 'react-chartjs-2';\r\n\r\nChart.defaults.font.weight = 'bold'\r\nChart.defaults.font.size = 13\r\nChart.defaults.color = 'rgb(255,255,255,.5)';\r\nexport const DoughnutChart = ({groupUnitType, groupData}) => {\r\n  const dataChart = {\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data: [],\r\n        \r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.2)',\r\n          'rgba(54, 162, 235, 0.2)',\r\n          'rgba(255, 206, 86, 0.2)',\r\n          'rgba(75, 192, 192, 0.2)',\r\n          'rgba(153, 102, 255, 0.2)',\r\n          'rgba(255, 159, 64, 0.2)',\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(255, 206, 86, 1)',\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(153, 102, 255, 1)',\r\n          'rgba(255, 159, 64, 1)',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  if(groupData){\r\n    groupData.forEach( elem => {\r\n      Object.values( elem ).forEach( info => {\r\n        dataChart.labels.push( info.nombre )\r\n        dataChart.datasets[0].data.push( info.valor )\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-center mw-100\" style={{width: '20rem'}}>\r\n        <h2 className=\"h5 fw-bold\">{groupUnitType.toUpperCase()}</h2>\r\n        <div className=\"bg-dark rounded shadow-sm p-3\">\r\n          <Doughnut data={dataChart} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPercentage, faDollarSign } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const CurrentValues = ({indicator}) => {\r\n\r\n  return (\r\n    <div className=\"w-25 p-1\" style={{minWidth: '10rem'}}>\r\n    {\r\n      (indicator) &&\r\n      <div className=\"card text-center fw-bold bg-dark\">\r\n          <p className=\"card-title text-white-50 pt-1\">{indicator.nombre}</p>\r\n          <div className=\"card-footer\">\r\n          {\r\n            (indicator.unidad_medida === 'Porcentaje') &&\r\n            <div className=\"text-secondary\">\r\n              {(indicator.valor) + ' '}\r\n              <FontAwesomeIcon icon={faPercentage}/>\r\n            </div>\r\n          }\r\n          {\r\n            (indicator.unidad_medida === 'Dólar' || indicator.unidad_medida === 'Pesos') &&\r\n            <div className=\"text-secondary\">\r\n              <FontAwesomeIcon icon={faDollarSign}/>\r\n              {' ' + indicator.valor} {indicator.unidad_medida}\r\n            </div>\r\n          }\r\n          </div>\r\n        </div>\r\n    }  \r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { createGroupByUnits } from '../../helpers/createGroupByUnits';\r\nimport { DoughnutChart } from '../Charts/DoughnutChart';\r\nimport { CurrentValues } from '../CurrentValues/CurrentValues';\r\n\r\nconst unitTypes = ['Porcentaje', 'Dólar', 'Pesos']\r\n\r\nexport const ListInformationContainers = () => {\r\n  const [groupsByUnit, setGroupsByUnit] = useState({})\r\n  const { data } = useSelector(state => state.api);\r\n\r\n  useEffect(() => {\r\n    if(data){\r\n      setGroupsByUnit(createGroupByUnits( data, unitTypes ));\r\n    }\r\n  }, [data])\r\n\r\n  return (\r\n    <>\r\n      {\r\n        (data) &&    \r\n        <div className=\"row row-cols-1 gap-3\">\r\n          <div className=\"col bg-secondary p-2 border border-2 border-secondary container rounded w-75\">\r\n            <h2 className=\"text-dark  h5 pb-2 border-bottom fw-bold border-2 border-dark fw-bold\">VALORES ACTUALES</h2>\r\n            <div className=\"d-flex justify-content-center align-items-center flex-wrap\">\r\n              <CurrentValues indicator={data.libra_cobre}/>\r\n              <CurrentValues indicator={data.tasa_desempleo}/>\r\n              <CurrentValues indicator={data.imacec}/>\r\n              <CurrentValues indicator={data.euro}/>\r\n              <CurrentValues indicator={data.dolar}/>\r\n              <CurrentValues indicator={data.dolar_intercambio}/>\r\n              <CurrentValues indicator={data.uf}/>\r\n              <CurrentValues indicator={data.utm}/>\r\n              <CurrentValues indicator={data.bitcoin}/>\r\n            </div>\r\n          </div>\r\n          <div className=\"col bg-secondary p-2 border border-2 border-secondary container rounded w-75\">\r\n            <h2 className=\"text-dark h5 pb-2 border-bottom fw-bold border-2 border-dark fw-bold\">GRAF. POR UNIDAD DE MEDIDA</h2>\r\n            <div className=\"d-flex justify-content-evenly align-items-center flex-wrap\">\r\n              <DoughnutChart groupUnitType={unitTypes[0]} groupData={groupsByUnit.percent}/>\r\n              <DoughnutChart groupUnitType={unitTypes[1]} groupData={groupsByUnit.dollar}/>\r\n              <DoughnutChart groupUnitType={unitTypes[2]} groupData={groupsByUnit.pesos}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n","export const createGroupByUnits = (data, units) => {\r\n  let separate = units.map( unit => {\r\n    return Object.entries( data ).map( ([indicator, value]) => (\r\n      (data[indicator]?.unidad_medida === unit) \r\n      ? { [indicator]: value }\r\n      : false\r\n    )).filter( elem => elem !== false)\r\n  })\r\n\r\n  let groups = {\r\n    percent: separate[0],\r\n    dollar: separate[1],\r\n    pesos: separate[2],\r\n  };\r\n\r\n  return groups;\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { DashboardError } from '../DashboardError/DashboardError';\r\nimport { LastUpdate } from '../LastUpdate/LastUpdate';\r\nimport { ListInformationContainers } from '../ListInformationContainers.js/ListInformationContainers';\r\n\r\nexport const Dashboard = () => {\r\n  const { error } = useSelector(state => state.api);\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-white-50 mt-3 text-center\">Tablero</h2>\r\n      <LastUpdate/>\r\n      {\r\n        (error)\r\n        ? <DashboardError error={error}/>\r\n        : <ListInformationContainers/>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","export const types = {\r\n  getAllData: '[API] Get all current data',\r\n  setDashboardInfo: '[API] Set updated information on the dashboard',\r\n  isTimeToUpdateData: '[API] Update the data by fetching per hour',\r\n\r\n  loadingScreen: '[UI] Set on/off loading state app',\r\n}","import { types } from \"../types/types\"\r\n\r\nexport const setLoadingStateOfUI = (loading) => ({\r\n  type: types.loadingScreen,\r\n  payload: {\r\n    loading\r\n  }\r\n})","import { types } from \"../types/types\";\r\nimport { setLoadingStateOfUI } from \"./ui\";\r\n\r\nexport const getAllData = ( url ) => {\r\n  return async ( dispatch ) => {\r\n    try {\r\n      dispatch( setLoadingStateOfUI(true) );\r\n\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n\r\n      dispatch( setDashboardInfo( data, null) );\r\n      dispatch( setLoadingStateOfUI(false) );\r\n    } catch (err) {\r\n      dispatch( setDashboardInfo( null, err) );\r\n      dispatch( setLoadingStateOfUI(false) );     \r\n    }\r\n  }\r\n}\r\n\r\nexport const isTimeToUpdateData = (isTime) => ({\r\n  type: types.isTimeToUpdateData,\r\n  payload: {\r\n    isTime,\r\n  }\r\n})\r\n\r\nexport const setDashboardInfo = (data, error) => ({\r\n  type: types.setDashboardInfo,\r\n  payload: {\r\n    data,\r\n    error,\r\n  }\r\n})","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoins, faInfo, faNewspaper, faTasks, faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const Sidebar = () => {\r\n  return (\r\n    <div className=\"text-center text-white-50 bg-secondary rounded p-2 h-100\" style={{width: '15rem'}}>\r\n      <h2 className=\"pb-5 border-bottom border-2 border-dark text-dark\">Navegación</h2>\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"mb-2\">\r\n          <button className=\"text-start btn btn-dark w-100\">\r\n            <FontAwesomeIcon icon={faUser}/>\r\n            <span className=\"\"> CLIENTES</span>\r\n          </button>\r\n        </li>\r\n        <li className=\"mb-2\">\r\n          <button className=\"text-start btn btn-dark w-100\">\r\n            <FontAwesomeIcon icon={faInfo}/>\r\n            <span className=\"\"> INFORMACIÓN</span>\r\n          </button>\r\n        </li>        <li className=\"mb-2\">\r\n          <button className=\"text-start btn btn-dark w-100\">\r\n            <FontAwesomeIcon icon={faTasks}/>\r\n            <span className=\"\"> TAREAS</span>\r\n          </button>\r\n        </li>        <li className=\"mb-2\">\r\n          <button className=\"text-start btn btn-dark w-100\">\r\n            <FontAwesomeIcon icon={faCoins}/>\r\n            <span className=\"\"> VALORES FRECUENTES</span>\r\n          </button>\r\n        </li>        <li className=\"mb-2\">\r\n          <button className=\"text-start btn btn-dark w-100\">\r\n            <FontAwesomeIcon icon={faNewspaper}/>\r\n            <span className=\"\"> NOTIFICACIONES</span>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from 'react';\r\nimport { Dashboard } from './components/Dashboard/Dashboard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllData, isTimeToUpdateData } from './actions/api';\r\nimport { Sidebar } from './components/Sidebar/Sidebar';\r\n\r\nconst anHourInMiliseconds = 3600000;\r\n\r\nexport const App = () => {\r\n  const dispatch = useDispatch();\r\n  const { isTime } = useSelector(state => state.api)\r\n  const url = `https://mindicador.cl/api`;\r\n\r\n  useEffect(() => {\r\n    dispatch( getAllData(url) );\r\n    const intervalId = setInterval( () => {\r\n      dispatch( isTimeToUpdateData( true ) );\r\n    }, anHourInMiliseconds)\r\n    dispatch( isTimeToUpdateData( false ) );\r\n    return () => clearInterval(intervalId)\r\n  }, [url, dispatch, isTime])\r\n\r\n  const { loading } = useSelector(state => state.ui);\r\n  return (\r\n    <div className=\"bg-dark vh-100 row\">\r\n      <section className=\"col-2 d-xl-block d-none\">\r\n        <Sidebar/>\r\n      </section>\r\n      <section className=\"col-xl-10 col-12\">\r\n        {\r\n          (loading)\r\n          ? <p>Cargando...</p>\r\n          : <Dashboard/>\r\n        }\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { apiReducer } from './apiReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  api: apiReducer,\r\n  ui: uiReducer\r\n})","import { types } from \"../types/types\";\r\n\r\n\r\nexport const apiReducer = (state = {}, action) => {\r\n  switch( action.type ) {\r\n    case types.setDashboardInfo:\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n        error: action.payload.error,\r\n      }\r\n    case types.isTimeToUpdateData:\r\n      return {\r\n        ...state,\r\n        isTime: action.payload.isTime\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const uiReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case types.loadingScreen:\r\n      return {\r\n        ...state,\r\n        loading: action.payload.loading\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}